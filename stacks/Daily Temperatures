Problem - Daily Temperatures

You are given an array of integers temperatures where temperatures[i] represents the daily temperatures on the ith day.
Return an array result where result[i] is the number of days after the ith day before a warmer temperature appears on a future day. If there is no day in the future where a warmer temperature will appear for the ith day, set result[i] to 0 instead.

Example 1:
Input: temperatures = [30,38,30,36,35,40,28]
Output: [1,4,1,2,1,0,0]

Example 2:
Input: temperatures = [22,21,20]
Output: [0,0,0]

Constraints:
1 <= temperatures.length <= 1000.
1 <= temperatures[i] <= 100

Solution - 
class Solution:
    def dailyTemperatures(self, temperatures: List[int]) -> List[int]:
        res = [0] * len(temperatures)
        stack = []

        for i,t in enumerate(temperatures):
            while stack and t>stack[-1][0]:
                stactT, stackInd = stack.pop()
                res[stackInd] = i - stackInd
            stack.append((t,i))
        return res
    

'''  
      temperatures = [30,38,30,36,35,40,28]
      Brute Force Approach 
      days =[]
        for i in range(0,len(temperatures)):
            day = 0
            f=0
            for j in range(i+1, len(temperatures)):
                if temperatures[j]>temperatures[i]:
                    f=1
                    day+=1
                    break
                elif temperatures[j]<=temperatures[i]:
                    day+=1
            if f==1:
                days.append(day)
            else:
                days.append(0)
            print(temperatures[i],day)
        
        return days'''
